<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Eason Cheng</title><link>http://example.org/posts/</link><description>Recent content in Posts on Eason Cheng</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 23 Oct 2023 00:00:00 +0800</lastBuildDate><atom:link href="http://example.org/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Something About Page Object</title><link>http://example.org/posts/page-object/</link><pubDate>Mon, 23 Oct 2023 00:00:00 +0800</pubDate><guid>http://example.org/posts/page-object/</guid><description>Page Object A page object is an object-oriented class that:
Serves as an interface to a page of your AUT. Should allow a software client to do anything and see anything that a human can. Provides an interface that&amp;rsquo;s easy to program to. Hides the underlying widgetry in the window. Regarding widgets:
Text fields should have accessor methods that take and return a string. Check boxes should use booleans. Buttons should be represented by action-oriented method names.</description></item><item><title>設計測試案例策略：提升軟體品質的核心步驟</title><link>http://example.org/posts/test-design-strategy/</link><pubDate>Sat, 13 May 2023 00:00:00 +0800</pubDate><guid>http://example.org/posts/test-design-strategy/</guid><description>在軟體開發的過程中，test case（測試案例）的設計是提高產品質量的關鍵步驟之一。良好的測試案例不僅能揭示潛在的缺陷，還能確保軟體符合業務需求和使用者期望。下面，我們將探討設計測試案例的策略及一些實用的設計技巧。
1. 了解需求 設計測試案例的首要步驟是深入理解軟體的需求和功能。測試人員需要閱讀 spec（規格書）、user story（使用者故事）或者與開發團隊進行討論，以獲得對應用程序的全面了解。
2. 選擇適當的設計技術 包括邊界值分析（Boundary Value Analysis, BVA）、等價分區（Equivalence Partitioning, EP）、決策表驅動測試（Decision Table Testing）等。選擇哪種技術取決於軟體的類型和複雜性，以及測試的目的。
3. 設計正向和反向案例 正向案例是根據正常和預期的使用情況設計的，而反向案例則是針對異常或錯誤的使用情況。兩者都是必要的，因為他們幫助確保軟體在各種可能的情況下都能正確運行。
4. 著眼於使用者視角 在設計測試案例時，我們需要考慮到真實世界的使用情況。這可能需要我們將自己置於使用者的位置，或者與真實的使用者進行討論。
5. Perform Review and Refactoring (進行評審和重構) 設計的測試案例需要定期進行評審和重構，以確保他們的有效性。當軟體的需求或設計發生變化時，測試案例也可能需要更新。
6. 設計測試案例的實用技巧 以下是一些實用的設計測試案例的技巧，能助於提升測試的全面性和有效性：
考慮兼容性 尤其是在跨平台和跨裝置的環境中，我們需要設計測試案例以確保軟體在各種不同的環境下都能正常運行。
考慮前置條件 對於相同的步驟或輸入，我們需要考慮各種不同的前置條件。例如，我們可以設計測試案例來檢查不同使用者身份對軟體功能的影響。
考慮不同的資料類型 我們需要考慮不同的資料格式和大小，並設計測試案例來檢查軟體如何處理這些不同的資料。這可以與兼容性的考慮相結合，以確保軟體在處理各種資料和環境時都能正常運行。
結語 設計測試案例是確保軟體質量的重要過程，需要深入理解需求，選擇適當的設計技術，並考慮到各種可能的使用情況。只有這樣，我們才能設計出能夠有效檢驗軟體功能與效能的測試案例，確保最終產品的品質並符合使用者的需求與期望。</description></item></channel></rss>